<?xml version="1.0"?>

<robot xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller" 
xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface" 
xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor" 
xmlns:xacro="http://ros.org/wiki/xacro">

<xacro:macro name="botmovil_sim_kinect">
  <gazebo reference="camera_link">
    <sensor:camera name="camera">
      <imageFormat>R8G8B8</imageFormat>
      <imageSize>640 480</imageSize>
      <hfov>60</hfov>
      <nearClip>0.05</nearClip>
      <farClip>3</farClip>
      <updateRate>20</updateRate>
      <baseline>0.1</baseline>
      <controller:gazebo_ros_openni_kinect name="kinect_camera_controller" plugin="libgazebo_ros_openni_kinect.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>20</updateRate>
	<cameraName>camera/rgb</cameraName>
        <imageTopicName>/camera/image_raw</imageTopicName>
        <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
        <cameraInfoTopicName>/camera/camera_info</cameraInfoTopicName>
        <frameName>camera_depth_optical_frame</frameName>
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
      </controller:gazebo_ros_openni_kinect>
    </sensor:camera>
  </gazebo>
</xacro:macro>

<!--Kinect Laser-->
<xacro:macro name="botmovil_sim_laser">
  <gazebo reference="laser">
    <sensor:ray name="laser">
      <rayCount>180</rayCount>
      <rangeCount>180</rangeCount>
      <laserCount>1</laserCount>
      
      <origin>0.0 0.0 0.0</origin>
      <displayRays>false</displayRays>
      
      <minAngle>-30</minAngle>
      <maxAngle>30</maxAngle>
      
      <minRange>0.08</minRange>
      <maxRange>10.0</maxRange>
      <resRange>0.01</resRange>
      <updateRate>20</updateRate>
      <controller:gazebo_ros_laser name="gazebo_ros_laser_controller" plugin="libgazebo_ros_laser.so">
	<gaussianNoise>0.005</gaussianNoise>
	<alwaysOn>true</alwaysOn>
	<updateRate>20</updateRate>
	<topicName>scan</topicName>
	<frameName>laser</frameName>
	<interface:laser name="gazebo_ros_laser_iface" />
      </controller:gazebo_ros_laser>
    </sensor:ray>
  </gazebo>
</xacro:macro>

<xacro:macro name="botmovil_base_gazebo">
        <gazebo>
            <controller:diffdrive_plugin name="differential_drive_controller" plugin="libdiffdrive_plugin.so">
                <alwaysOn>true</alwaysOn>
                <update>100</update>
                <updateRate>100.0</updateRate>
                <leftJoint>base_link_right_wheel_joint</leftJoint>
                <rightJoint>base_link_left_wheel_joint</rightJoint>
                <wheelSeparation>0.30392257</wheelSeparation>
                <wheelDiameter>0.09</wheelDiameter>
                <torque>0.77677072</torque>
                <interface:position name="position_iface_0"/>
                <topicName>cmd_vel</topicName>
            </controller:diffdrive_plugin>

            <controller:gazebo_ros_p3d name="p3d_base_controller" plugin="libgazebo_ros_p3d.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>100.0</updateRate>
                <bodyName>base_link</bodyName>
                <topicName>base_pose_ground_truth</topicName>
                <gaussianNoise>0.01</gaussianNoise>
                <frameName>map</frameName>
                <xyzOffsets>0 0 0</xyzOffsets> 
                <rpyOffsets>0 0 0</rpyOffsets>
                <interface:position name="p3d_base_position"/>
            </controller:gazebo_ros_p3d>

            <!--canonicalBody>base_footprint</canonicalBody-->

            <!-- this publishes empty joint_states due to no transmission, but
             triggering robot_state_publisher to publish tf between fixed joints in erratic,
             (e.g. base_laser_link for the base_scan frame) -->
            <controller:gazebo_ros_controller_manager name="gazebo_ros_controller_manager" plugin="libgazebo_ros_controller_manager.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>100.0</updateRate>
                <interface:audio name="gazebo_ros_controller_manager_dummy_iface" />
            </controller:gazebo_ros_controller_manager>
        </gazebo>

</xacro:macro>

<xacro:macro name="botmovil_sim_hokuyo">
        <gazebo reference="base_scan_link">
            <sensor:ray name="laser">
                <rayCount>683</rayCount>
                <rangeCount>683</rangeCount>
                <laserCount>1</laserCount>
                
                <origin>0.0 0.0 0.0</origin>
                <displayRays>false</displayRays>
                
                <minAngle>-135</minAngle>
                <maxAngle> 135</maxAngle>
                
                <minRange>0.06</minRange>
                <maxRange>4.0</maxRange>
                <resRange>0.001</resRange>
                <updateRate>10.0</updateRate>
                
                <controller:gazebo_ros_laser name="gazebo_ros_base_scan_link_controller" plugin="libgazebo_ros_laser.so">
                    <gaussianNoise>0.005</gaussianNoise>
                    <alwaysOn>true</alwaysOn>
                    <updateRate>10.0</updateRate>
                    <topicName>base_scan/scan</topicName>
                    <frameName>base_scan_link</frameName>
                    <interface:laser name="gazebo_ros_base_scan_link_iface"/>
                </controller:gazebo_ros_laser>
            </sensor:ray>
        </gazebo>
        
        <gazebo reference="laser_base_link">
            <material>Erratic/Grey</material>
        </gazebo>
        
        <gazebo reference="base_scan_link">
            <material>Erratic/Black</material>
        </gazebo>
</xacro:macro>

</robot>
